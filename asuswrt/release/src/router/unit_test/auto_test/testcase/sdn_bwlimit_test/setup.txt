SWITCH=DEVICE_0
export OUT_FNAME=$HOME/tc-check-sdn_bwlimit.sh
echo -e "#!/bin/sh\nap_wifi_rl=\`nvram get ap_wifi_rl\`\n##ap_wifi_rl=\"<52>wl0.1,wl1.1<53>wl0.2,wl1.2\"\nsdn_rl=\`nvram get sdn_rl\`\n##sdn_rl=\"<0>DEFAULT>1>0>0>0>0>0>0>0>0>0>0>0>0>0>0>0<1>Guest>1>1>1>1>0>0>0>0>0>0>0>0>0>0>0>0<2>Guest>1>2>2>2>0>0>0>0>0>0>0>0>0>0>0>0\"\nvlan_rl=\`nvram get vlan_rl\`\n##vlan_rl=\"<1>52>0><2>53>0>\"\nwan_ifname=\`nvram get wan_ifname\`\n##wna_ifname=\"eth0\"\nre_mode=\`nvram get re_mode\`\n\nget_nv_prefix_by_ifname() {\n    unit=0\n    subunit=1\n    found=0\n    while [ \$unit -le 8 ]; do\n        while [ \$subunit -le 16 ]; do\n            ifname=\`nvram get wl\"\$unit\".\"\$subunit\"_ifname\`\n            if [ \"\$ifname\" == \"\$1\" ]; then\n                found=1\n                break\n            fi\n            subunit=\$((subunit+1))\n        done\n        if [ \$found -eq 1 ]; then\n            break\n        fi\n        unit=\$((unit+1))\n        subunit=1\n    done\n    if [ \$found -eq 1 ]; then\n                  " >>$OUT_FNAME
echo -e "echo wl\"\$unit\".\"\$subunit\"\n    else\n        echo \"\"\n    fi\n}\n\nget_bw_enabled_by_ifname() {\n    nv_prefix=\$(get_nv_prefix_by_ifname \$1)\n    result=\`nvram get \"\$nv_prefix\"_bw_enabled\`\n    return \$result\n}\n\nget_bw_ul_by_ifname() {\n    nv_prefix=\$(get_nv_prefix_by_ifname \$1)\n    result=\`nvram get \"\$nv_prefix\"_bw_ul\`\n    echo \$result\n}\n\nget_bw_dl_by_ifname() {\n    nv_prefix=\$(get_nv_prefix_by_ifname \$1)\n    result=\`nvram get \"\$nv_prefix\"_bw_dl\`\n    echo \$result\n}\n\nget_vlan_idx_by_sdn_idx() {\n    IFS=\"<\"\n    for word in \$sdn_rl; do\n        found=0\n        field=1\n        IFS=\">\"\n        for word2 in \$word; do\n            if [ \$field -eq 1 ]; then\n                if [ \"\$word2\" == \"\$1\"  ]; then\n                    found=1\n                fi\n            fi\n            if [ \$field -eq 4 ]; then\n                if [ \$found -eq 1 ]; then\n                    index=\$word2\n                fi\n" >>$OUT_FNAME
echo -e "            fi\n            field=\$((field+1))\n        done\n        if [ \$found -eq 1 ]; then\n                break\n        fi\n    done\n    return \$index\n}\n\nget_vlan_id_by_vlan_idx() {\n    IFS=\"<\"\n    for word in \$vlan_rl; do\n        found=0\n        field=1\n        IFS=\">\"\n        for word2 in \$word; do\n            if [ \$field -eq 1 ]; then\n                if [ \"\$word2\" == \"\$1\"  ]; then\n                    found=1\n                fi\n            fi\n            if [ \$field -eq 2 ]; then\n                if [ \$found -eq 1 ]; then\n                    vid=\$word2\n                fi\n            fi\n            field=\$((field+1))\n        done\n        if [ \$found -eq 1 ]; then\n                break   \n        fi\n    done\n    return \$vid\n}\n\nget_apg_ifnames_by_sdn_vid() {\n    IFS=\"<\"\n    for word in \$ap_wifi_rl; do\n        found=0\n        field=1\n        IFS=\">\"\n        for word2 in \$word; do\n   " >>$OUT_FNAME
echo -e "         if [ \$field -eq 1 ]; then\n                if [ \"\$word2\" == \"\$1\"  ]; then\n                    found=1\n                fi\n            fi\n            if [ \$field -eq 2 ]; then\n                if [ \$found -eq 1 ]; then\n                    apg_ifnames=\$word2\n                fi\n            fi\n            field=\$((field+1))\n        done\n        if [ \$found -eq 1 ]; then\n                break\n        fi\n    done\n    echo \$apg_ifnames\n}\n\nget_bw_mask_by_ifname() {\n    ebtables -t nat -L PREROUTING > ebtables-rule.txt\n    s=\`cat ebtables-rule.txt | grep \$1 | awk {'print \$6'}\`\n    echo \$s\n}\n\ncheck_ul_limiter() {                                    \n    result=0                                                                               \n    mask=\$1                                                                                \n    mask_str=\":\"\$((\${mask}))                                                 " >>$OUT_FNAME
echo -e "              \n    tc -s -d class ls dev \$wan_ifname > tc.txt                                             \n    s=\`cat tc.txt | grep \$mask_str | awk {'print \$15'}\`                                   \n    if [ \"\$s\" == \"\$2\" ]; then                                                              \n        result=1                                                                           \n    fi                                                                                     \n    echo \$result                                                                           \n}           \n\ncheck_dl_limiter() {\n    result=\"0\"                                                                               \n    mask=\$1                                                                                \n    mask_str=\":\"\$((\${mask}))                                                               \n    tc -s -d class ls dev \$2 > tc.txt                " >>$OUT_FNAME
echo -e "                             \n    s=\`cat tc.txt | grep \$mask_str | awk {'print \$15'}\`                                   \n    if [ \"\$s\" == \"\$3\" ]; then                                                              \n        result=1                                                                           \n    fi                                                                                     \n    echo \$result                                                                           \n}\n\nresult=1\nget_vlan_id_by_vlan_idx \$1\nvlan_index=\$?\nget_vlan_id_by_vlan_idx \$vlan_index\nsdn_vid=\$?\napg_ifnames=\$(get_apg_ifnames_by_sdn_vid \$sdn_vid)\necho \"APGroup ifnames=\"\$apg_ifnames\nif [ ! -z \"\$apg_ifnames\" ]; then\n    IFS=\",\"\n    for word in \$apg_ifnames; do\n        bw_mask=\$(get_bw_mask_by_ifname \$word)\n        if [ \"\$re_mode\" == \"0\" ]; then\n            bw_ul=\$(get_bw_ul_by_ifname \$word)\"Kbit\"\n              " >>$OUT_FNAME
echo -e "check_ul_result=\$(check_ul_limiter \$bw_mask \$bw_ul)\n            if [ \"\$check_ul_result\" != \"1\" ]; then\n                result=0\n                break;\n            fi\n        fi\n        bw_dl=\$(get_bw_dl_by_ifname \$word)\"Kbit\"\n        check_dl_result=\$(check_dl_limiter \$bw_mask \$word \$bw_dl)\n        if [ \"\$check_dl_result\" != \"1\" ]; then\n            result=0\n            break;\n        fi\n    done\nelse\n    result=0\nfi\n\nif [ \$result -eq 1 ]; then\n    echo \"OK\"\n    exit 1\nelse \n    echo \"FAIL\"\n    exit 0\nfi" >>$OUT_FNAME
chmod 777 $OUT_FNAME
SWITCH=DEVICE_1
export OUT_FNAME=$HOME/tc-check-sdn_bwlimit.sh
echo -e "#!/bin/sh\nap_wifi_rl=\`nvram get ap_wifi_rl\`\n##ap_wifi_rl=\"<52>wl0.1,wl1.1<53>wl0.2,wl1.2\"\nsdn_rl=\`nvram get sdn_rl\`\n##sdn_rl=\"<0>DEFAULT>1>0>0>0>0>0>0>0>0>0>0>0>0>0>0>0<1>Guest>1>1>1>1>0>0>0>0>0>0>0>0>0>0>0>0<2>Guest>1>2>2>2>0>0>0>0>0>0>0>0>0>0>0>0\"\nvlan_rl=\`nvram get vlan_rl\`\n##vlan_rl=\"<1>52>0><2>53>0>\"\nwan_ifname=\`nvram get wan_ifname\`\n##wna_ifname=\"eth0\"\nre_mode=\`nvram get re_mode\`\n\nget_nv_prefix_by_ifname() {\n    unit=0\n    subunit=1\n    found=0\n    while [ \$unit -le 8 ]; do\n        while [ \$subunit -le 16 ]; do\n            ifname=\`nvram get wl\"\$unit\".\"\$subunit\"_ifname\`\n            if [ \"\$ifname\" == \"\$1\" ]; then\n                found=1\n                break\n            fi\n            subunit=\$((subunit+1))\n        done\n        if [ \$found -eq 1 ]; then\n            break\n        fi\n        unit=\$((unit+1))\n        subunit=1\n    done\n    if [ \$found -eq 1 ]; then\n                  " >>$OUT_FNAME
echo -e "echo wl\"\$unit\".\"\$subunit\"\n    else\n        echo \"\"\n    fi\n}\n\nget_bw_enabled_by_ifname() {\n    nv_prefix=\$(get_nv_prefix_by_ifname \$1)\n    result=\`nvram get \"\$nv_prefix\"_bw_enabled\`\n    return \$result\n}\n\nget_bw_ul_by_ifname() {\n    nv_prefix=\$(get_nv_prefix_by_ifname \$1)\n    result=\`nvram get \"\$nv_prefix\"_bw_ul\`\n    echo \$result\n}\n\nget_bw_dl_by_ifname() {\n    nv_prefix=\$(get_nv_prefix_by_ifname \$1)\n    result=\`nvram get \"\$nv_prefix\"_bw_dl\`\n    echo \$result\n}\n\nget_vlan_idx_by_sdn_idx() {\n    IFS=\"<\"\n    for word in \$sdn_rl; do\n        found=0\n        field=1\n        IFS=\">\"\n        for word2 in \$word; do\n            if [ \$field -eq 1 ]; then\n                if [ \"\$word2\" == \"\$1\"  ]; then\n                    found=1\n                fi\n            fi\n            if [ \$field -eq 4 ]; then\n                if [ \$found -eq 1 ]; then\n                    index=\$word2\n                fi\n" >>$OUT_FNAME
echo -e "            fi\n            field=\$((field+1))\n        done\n        if [ \$found -eq 1 ]; then\n                break\n        fi\n    done\n    return \$index\n}\n\nget_vlan_id_by_vlan_idx() {\n    IFS=\"<\"\n    for word in \$vlan_rl; do\n        found=0\n        field=1\n        IFS=\">\"\n        for word2 in \$word; do\n            if [ \$field -eq 1 ]; then\n                if [ \"\$word2\" == \"\$1\"  ]; then\n                    found=1\n                fi\n            fi\n            if [ \$field -eq 2 ]; then\n                if [ \$found -eq 1 ]; then\n                    vid=\$word2\n                fi\n            fi\n            field=\$((field+1))\n        done\n        if [ \$found -eq 1 ]; then\n                break   \n        fi\n    done\n    return \$vid\n}\n\nget_apg_ifnames_by_sdn_vid() {\n    IFS=\"<\"\n    for word in \$ap_wifi_rl; do\n        found=0\n        field=1\n        IFS=\">\"\n        for word2 in \$word; do\n   " >>$OUT_FNAME
echo -e "         if [ \$field -eq 1 ]; then\n                if [ \"\$word2\" == \"\$1\"  ]; then\n                    found=1\n                fi\n            fi\n            if [ \$field -eq 2 ]; then\n                if [ \$found -eq 1 ]; then\n                    apg_ifnames=\$word2\n                fi\n            fi\n            field=\$((field+1))\n        done\n        if [ \$found -eq 1 ]; then\n                break\n        fi\n    done\n    echo \$apg_ifnames\n}\n\nget_bw_mask_by_ifname() {\n    ebtables -t nat -L PREROUTING > ebtables-rule.txt\n    s=\`cat ebtables-rule.txt | grep \$1 | awk {'print \$6'}\`\n    echo \$s\n}\n\ncheck_ul_limiter() {                                    \n    result=0                                                                               \n    mask=\$1                                                                                \n    mask_str=\":\"\$((\${mask}))                                                 " >>$OUT_FNAME
echo -e "              \n    tc -s -d class ls dev \$wan_ifname > tc.txt                                             \n    s=\`cat tc.txt | grep \$mask_str | awk {'print \$15'}\`                                   \n    if [ \"\$s\" == \"\$2\" ]; then                                                              \n        result=1                                                                           \n    fi                                                                                     \n    echo \$result                                                                           \n}           \n\ncheck_dl_limiter() {\n    result=\"0\"                                                                               \n    mask=\$1                                                                                \n    mask_str=\":\"\$((\${mask}))                                                               \n    tc -s -d class ls dev \$2 > tc.txt                " >>$OUT_FNAME
echo -e "                             \n    s=\`cat tc.txt | grep \$mask_str | awk {'print \$15'}\`                                   \n    if [ \"\$s\" == \"\$3\" ]; then                                                              \n        result=1                                                                           \n    fi                                                                                     \n    echo \$result                                                                           \n}\n\nresult=1\nget_vlan_id_by_vlan_idx \$1\nvlan_index=\$?\nget_vlan_id_by_vlan_idx \$vlan_index\nsdn_vid=\$?\napg_ifnames=\$(get_apg_ifnames_by_sdn_vid \$sdn_vid)\necho \"APGroup ifnames=\"\$apg_ifnames\nif [ ! -z \"\$apg_ifnames\" ]; then\n    IFS=\",\"\n    for word in \$apg_ifnames; do\n        bw_mask=\$(get_bw_mask_by_ifname \$word)\n        if [ \"\$re_mode\" == \"0\" ]; then\n            bw_ul=\$(get_bw_ul_by_ifname \$word)\"Kbit\"\n              " >>$OUT_FNAME
echo -e "check_ul_result=\$(check_ul_limiter \$bw_mask \$bw_ul)\n            if [ \"\$check_ul_result\" != \"1\" ]; then\n                result=0\n                break;\n            fi\n        fi\n        bw_dl=\$(get_bw_dl_by_ifname \$word)\"Kbit\"\n        check_dl_result=\$(check_dl_limiter \$bw_mask \$word \$bw_dl)\n        if [ \"\$check_dl_result\" != \"1\" ]; then\n            result=0\n            break;\n        fi\n    done\nelse\n    result=0\nfi\n\nif [ \$result -eq 1 ]; then\n    echo \"OK\"\n    exit 1\nelse \n    echo \"FAIL\"\n    exit 0\nfi" >>$OUT_FNAME
chmod 777 $OUT_FNAME